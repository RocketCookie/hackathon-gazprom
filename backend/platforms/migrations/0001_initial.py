# Generated by Django 5.1 on 2024-08-19 04:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Platform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_platform", models.CharField(max_length=100)),
                ("description_platform", models.TextField(blank=True, null=True)),
                ("challenge_platform", models.TextField(blank=True, null=True)),
                ("creation_date_platform", models.DateField()),
                ("type_platform", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_product", models.CharField(max_length=100)),
                ("description_product", models.TextField(blank=True, null=True)),
                ("challenge_product", models.TextField(blank=True, null=True)),
                ("creation_date_product", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_service", models.CharField(max_length=100)),
                ("description_service", models.TextField(blank=True, null=True)),
                ("challenge_service", models.TextField(blank=True, null=True)),
                ("creation_date_service", models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name="ProductInPlatform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products_in_platform",
                        to="platforms.platform",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="platforms_in_product",
                        to="platforms.product",
                    ),
                ),
            ],
            options={
                "unique_together": {("platform", "product")},
            },
        ),
        migrations.CreateModel(
            name="ServiceInProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services_in_product",
                        to="platforms.product",
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products_in_service",
                        to="platforms.service",
                    ),
                ),
            ],
            options={
                "unique_together": {("product", "service")},
            },
        ),
    ]
